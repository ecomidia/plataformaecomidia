# Generated by Django 3.2.19 on 2023-05-11 07:14

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Gif',
            fields=[
                ('id', models.TextField(primary_key=True, serialize=False)),
                ('media_url', models.URLField()),
                ('media_url_https', models.URLField()),
                ('display_url', models.URLField()),
                ('expanded_url', models.URLField()),
                ('media_key', models.TextField(blank=True, null=True)),
                ('aspect_ratio_x', models.IntegerField()),
                ('aspect_ratio_y', models.IntegerField()),
                ('gif_url', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Hashtag',
            fields=[
                ('text', models.TextField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.TextField(primary_key=True, serialize=False)),
                ('media_url', models.URLField()),
                ('media_url_https', models.URLField()),
                ('media_key', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('bounding_box', models.TextField()),
                ('country', models.TextField()),
                ('country_code', models.TextField()),
                ('full_name', models.TextField()),
                ('id', models.TextField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('url', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Url',
            fields=[
                ('url', models.URLField(max_length=2048, primary_key=True, serialize=False)),
                ('expanded_url', models.URLField(blank=True, max_length=2048, null=True)),
                ('display_url', models.URLField(blank=True, max_length=2048, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.TextField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('screen_name', models.TextField()),
                ('location', models.TextField()),
                ('description', models.TextField()),
                ('protected', models.BooleanField()),
                ('followers_count', models.BigIntegerField()),
                ('fast_followers_count', models.BigIntegerField(blank=True, null=True)),
                ('normal_followers_count', models.BigIntegerField(blank=True, null=True)),
                ('friends_count', models.BigIntegerField()),
                ('listed_count', models.BigIntegerField()),
                ('created_at', models.DateTimeField()),
                ('favourites_count', models.BigIntegerField()),
                ('geo_enabled', models.BooleanField()),
                ('verified', models.BooleanField()),
                ('statuses_count', models.BigIntegerField()),
                ('media_count', models.BigIntegerField(blank=True, null=True)),
                ('lang', models.TextField(null=True)),
                ('contributors_enabled', models.BooleanField()),
                ('is_translator', models.BooleanField()),
                ('is_translation_enabled', models.BooleanField()),
                ('profile_background_color', models.TextField()),
                ('profile_background_image_url', models.URLField(null=True)),
                ('profile_background_image_url_https', models.URLField(null=True)),
                ('profile_background_tile', models.BooleanField()),
                ('profile_image_url', models.URLField(null=True)),
                ('profile_image_url_https', models.URLField(null=True)),
                ('profile_banner_url', models.URLField(null=True)),
                ('profile_link_color', models.TextField()),
                ('profile_sidebar_border_color', models.TextField()),
                ('profile_sidebar_fill_color', models.TextField()),
                ('profile_text_color', models.TextField()),
                ('profile_use_background_image', models.BooleanField()),
                ('has_custom_timelines', models.BooleanField(blank=True, null=True)),
                ('advertiser_account_type', models.TextField(blank=True, null=True)),
                ('analytics_type', models.TextField(blank=True, null=True)),
                ('translator_type', models.TextField(blank=True, null=True)),
                ('descriptionUrl', models.ManyToManyField(related_name='description_url', to='twitter.Url')),
                ('urls', models.ManyToManyField(related_name='urls', to='twitter.Url')),
            ],
        ),
        migrations.CreateModel(
            name='UserMention',
            fields=[
                ('screen_name', models.TextField()),
                ('name', models.TextField()),
                ('id', models.TextField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.TextField(primary_key=True, serialize=False)),
                ('media_url', models.URLField()),
                ('media_url_https', models.URLField()),
                ('media_key', models.TextField(blank=True, null=True)),
                ('aspect_ratio_x', models.IntegerField()),
                ('aspect_ratio_y', models.IntegerField()),
                ('duration_millis', models.BigIntegerField()),
                ('video_url', models.URLField()),
                ('url', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='twitter.url')),
            ],
        ),
        migrations.CreateModel(
            name='UserList',
            fields=[
                ('created_at', models.DateTimeField()),
                ('slug', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=200)),
                ('full_name', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=5000)),
                ('mode', models.CharField(max_length=50)),
                ('member_count', models.BigIntegerField()),
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('subscriber_count', models.BigIntegerField()),
                ('uri', models.URLField()),
                ('members', models.ManyToManyField(related_name='members', to='twitter.User')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='owner', to='twitter.user')),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('created_at', models.DateTimeField()),
                ('id', models.TextField(primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('display_text_range_start', models.IntegerField()),
                ('display_text_range_end', models.IntegerField()),
                ('source', models.TextField()),
                ('in_reply_to_status_id', models.TextField(null=True)),
                ('in_reply_to_user_id', models.TextField(null=True)),
                ('in_reply_to_screen_name', models.TextField(null=True)),
                ('is_quote_status', models.BooleanField()),
                ('retweet_count', models.BigIntegerField()),
                ('favorite_count', models.BigIntegerField()),
                ('conversation_id', models.TextField(blank=True, null=True)),
                ('possibly_sensitive', models.BooleanField(blank=True, null=True)),
                ('possibly_sensitive_editable', models.BooleanField(blank=True, null=True)),
                ('lang', models.TextField()),
                ('gifs', models.ManyToManyField(related_name='gifs', to='twitter.Gif')),
                ('hashtags', models.ManyToManyField(to='twitter.Hashtag')),
                ('photos', models.ManyToManyField(related_name='photos', to='twitter.Photo')),
                ('place', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='twitter.place')),
                ('quoted_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='quoted', to='twitter.status')),
                ('retweet_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='retweet', to='twitter.status')),
                ('urls', models.ManyToManyField(to='twitter.Url')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='twitter.user')),
                ('user_mentions', models.ManyToManyField(to='twitter.UserMention')),
                ('videos', models.ManyToManyField(related_name='videos', to='twitter.Video')),
            ],
        ),
        migrations.CreateModel(
            name='PinnedTweet',
            fields=[
                ('id', models.TextField(primary_key=True, serialize=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='twitter.user')),
            ],
        ),
        migrations.AddField(
            model_name='photo',
            name='url',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='twitter.url'),
        ),
        migrations.AddField(
            model_name='gif',
            name='url',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='twitter.url'),
        ),
        migrations.CreateModel(
            name='AdvertiserAccountServiceLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('advertiser_account_service_levels', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='twitter.user')),
            ],
        ),
    ]
